name: Build and Dockerize All Services

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  REGISTRY: docker.io
  DOCKER_USERNAME: boderuxa

jobs:
  build-and-dockerize:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - path: src/Services/Coach/Coach.API
            name: scmrs-coach-service
            watch: src/Services/Coach
          - path: src/Services/Chat/Chat.API
            name: scmrs-chat-service
            watch: src/Services/Chat
          - path: src/Services/Notification/Notification.API
            name: scmrs-notification-service
            watch: src/Services/Notification
          - path: src/Services/Payment/Payment
            name: scmrs-payment-service
            watch: src/Services/Payment
          - path: src/Services/Review/Review.API
            name: scmrs-review-service
            watch: src/Services/Review
          - path: src/Gateway/YarpApiGateway
            name: scmrs-gateway
            watch: src/Gateway
          - path: src/Services/Identity/Identity.API
            name: scmrs-identity-service
            watch: src/Services/Identity
          - path: src/Services/CourtBooking/CourtBooking.API
            name: scmrs-courtbooking-service
            watch: src/Services/CourtBooking
          - path: src/Services/Matching/Matching.API
            name: scmrs-matching-service
            watch: src/Services/Matching

    environment: STAG

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check for changes in service
        id: changes
        run: |
          WATCH_PATH="${{ matrix.watch }}"
          echo "Checking changes in $WATCH_PATH"

          PREVIOUS_SHA="${{ github.event.before }}"
          CURRENT_SHA="${{ github.sha }}"

          echo "Comparing $PREVIOUS_SHA to $CURRENT_SHA..."

          # In ra danh sách file thay đổi
          git diff --name-only "$PREVIOUS_SHA" "$CURRENT_SHA" -- "$WATCH_PATH"

          if git diff --quiet "$PREVIOUS_SHA" "$CURRENT_SHA" -- "$WATCH_PATH"; then
            echo "No changes in $WATCH_PATH"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in $WATCH_PATH"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

          
      - name: Build Docker image
        if: steps.changes.outputs.changed == 'true'
        run: |
          IMAGE_NAME=${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ matrix.name }}:latest
          echo "Building $IMAGE_NAME from ${{ matrix.path }}"
          docker buildx build \
            --file ${{ matrix.path }}/Dockerfile \
            --tag $IMAGE_NAME \
            --output type=docker \
            .

      - name: Push Docker image
        if: steps.changes.outputs.changed == 'true'
        run: |
          IMAGE_NAME=${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ matrix.name }}:latest
          echo "Pushing $IMAGE_NAME"
          docker push $IMAGE_NAME
